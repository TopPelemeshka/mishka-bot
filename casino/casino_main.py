"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –∫–∞–∑–∏–Ω–æ, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–∞–º–∏.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–≥—Ä—ã: —Å–ª–æ—Ç—ã –∏ —Ä—É–ª–µ—Ç–∫–∞, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã.
"""
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging
from balance import get_balance
from casino.slots import handle_slots_callback, handle_slots_bet_callback
from casino.roulette import handle_roulette_bet, handle_roulette_bet_callback, handle_change_bet

async def casino_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /casino - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ —Å —Ç–µ–∫—É—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –Ω–µ –æ—Ç –±–æ—Ç–∞
    if update.callback_query and not update.callback_query.from_user.is_bot:
        user_id = update.callback_query.from_user.id
    elif update.message and not update.message.from_user.is_bot:
        user_id = update.message.from_user.id
    else:
        return

    try:
        bal = get_balance(user_id)  # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è —ç—Ç–æ–≥–æ user_id
        logging.debug(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {bal}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
        keyboard = [
            [
                InlineKeyboardButton("üé∞ –°–ª–æ—Ç—ã", callback_data="casino:slots"),
                InlineKeyboardButton("üé≤ –†—É–ª–µ—Ç–∫–∞", callback_data="casino:roulette"),
            ],
            [InlineKeyboardButton("üö™ –í—ã–π—Ç–∏", callback_data="casino:exit")]
        ]
        markup = InlineKeyboardMarkup(keyboard)

        text = (
            f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ, {update.effective_user.first_name}! üéâ\n\n"
            f"üí∞ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {bal} –º–æ–Ω–µ—Ç.\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∏ –∏—Å–ø—ã—Ç–∞–π—Ç–µ —É–¥–∞—á—É!"
        )

        # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å, —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if update.callback_query and update.callback_query.message:
            try:
                await update.callback_query.message.delete()
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ: {e}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
        if update.message:
            await context.bot.send_message(chat_id=update.message.chat_id, text=text, reply_markup=markup)
        elif update.callback_query:
            await context.bot.send_message(chat_id=update.callback_query.message.chat_id, text=text, reply_markup=markup)
    
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def casino_menu_without_balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ –±–µ–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ –∏–≥—Ä –≤ –º–µ–Ω—é –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    """
    if update.callback_query and not update.callback_query.from_user.is_bot:
        user_id = update.callback_query.from_user.id
    elif update.message and not update.message.from_user.is_bot:
        user_id = update.message.from_user.id
    else:
        return

    try:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
        if update.callback_query.message:
            try:
                await update.callback_query.message.delete()
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ: {e}")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–≥—Ä –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = [
            [
                InlineKeyboardButton("üé∞ –°–ª–æ—Ç—ã", callback_data="casino:slots"),
                InlineKeyboardButton("üé≤ –†—É–ª–µ—Ç–∫–∞", callback_data="casino:roulette"),
            ],
            [InlineKeyboardButton("üè† –í –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ", callback_data="casino:menu")]
        ]
        markup = InlineKeyboardMarkup(keyboard)

        text = "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ! –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –¥–ª—è –Ω–∞—á–∞–ª–∞!"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if update.callback_query and update.callback_query.message:
            await context.bot.send_message(chat_id=update.callback_query.message.chat_id, text=text, reply_markup=markup)
        elif update.message:
            await context.bot.send_message(chat_id=update.message.chat_id, text=text, reply_markup=markup)
    
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –±–∞–ª–∞–Ω—Å–∞: {e}")

async def casino_callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –∫–∞–∑–∏–Ω–æ.
    –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –∏–≥—Ä.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    """
    query = update.callback_query
    data = query.data

    try:
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∏–≥—Ä—ã –∏ –¥–µ–π—Å—Ç–≤–∏—è
        if data == "casino:slots":
            # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã
            await handle_slots_callback(query, context)
        elif data == "casino:roulette":
            # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –≤ —Ä—É–ª–µ—Ç–∫—É
            await handle_roulette_bet(update, context)
        elif data.startswith("roulette_bet:"):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–≤–∫–∏ –≤ —Ä—É–ª–µ—Ç–∫–µ
            bet_type = data.split(":")[1]
            bet_amount = int(data.split(":")[2])
            context.user_data['bet_amount'] = bet_amount
            await handle_roulette_bet_callback(query, context, bet_type)
        elif data.startswith("slots_bet:"):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–≤–∫–∏ –¥–ª—è —Å–ª–æ—Ç–æ–≤
            await handle_slots_bet_callback(update, context)
        elif data == "casino:menu":
            # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ
            await casino_command(update, context)
        elif data == "casino:exit":
            # –í—ã—Ö–æ–¥ –∏–∑ –∫–∞–∑–∏–Ω–æ
            await query.message.delete()
            await query.answer("–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∫–∞–∑–∏–Ω–æ. –î–æ –≤—Å—Ç—Ä–µ—á–∏! üëã")
        else:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
            await query.answer("‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", show_alert=True)
    
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback –∑–∞–ø—Ä–æ—Å–∞: {e}")
        await query.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)
