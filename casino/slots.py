"""
–ú–æ–¥—É–ª—å –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã –¥–ª—è –∫–∞–∑–∏–Ω–æ.
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç:
- –í—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã —Å —Ç—Ä–µ–º—è –±–∞—Ä–∞–±–∞–Ω–∞–º–∏
- –†–∞—Å—á–µ—Ç –≤—ã–∏–≥—Ä—ã—à–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å–∏–º–≤–æ–ª–æ–≤
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import random
import logging
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
from balance import get_balance, update_balance

# –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Å–ª–æ—Ç–æ–≤
SLOT_SYMBOLS = ["üçí", "üçã", "üîî", "üçÄ", "üíé", "7Ô∏è‚É£"]

async def handle_slots_callback(query, context):
    """
    –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∞–≤–∫—É –¥–ª—è —Å–ª–æ—Ç–æ–≤,
    –≤—ã—á–∏—Å–ª—è—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–∫ 1%, 5% –∏ 10% –æ—Ç –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        query: –û–±—ä–µ–∫—Ç callback_query –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    """
    await query.answer()
    user_id = query.from_user.id
    balance = get_balance(user_id)
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞–≤–∫–∏; –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äì 1 –º–æ–Ω–µ—Ç–∞
    bet_1 = max(int(balance * 0.01), 1)
    bet_5 = max(int(balance * 0.05), 1)
    bet_10 = max(int(balance * 0.1), 1)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–≤–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (1%)
    context.user_data['slots_bet'] = bet_1

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç—Ä–µ–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å—Ç–∞–≤–æ–∫
    keyboard = [
        [InlineKeyboardButton(f"–°—Ç–∞–≤–∫–∞ 1% ({bet_1} –º–æ–Ω–µ—Ç)", callback_data=f"slots_bet:{bet_1}")],
        [InlineKeyboardButton(f"–°—Ç–∞–≤–∫–∞ 5% ({bet_5} –º–æ–Ω–µ—Ç)", callback_data=f"slots_bet:{bet_5}")],
        [InlineKeyboardButton(f"–°—Ç–∞–≤–∫–∞ 10% ({bet_10} –º–æ–Ω–µ—Ç)", callback_data=f"slots_bet:{bet_10}")]
    ]
    markup = InlineKeyboardMarkup(keyboard)
    text = "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É –¥–ª—è —Å–ª–æ—Ç–æ–≤:"
    await query.edit_message_text(text, reply_markup=markup)

async def handle_slots_bet_callback(update, context):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä –∏–≥—Ä—ã.
    –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É –≤ —Å–ª–æ—Ç—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –º–µ–Ω—é –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    
    Note:
        –ü—Ä–∞–≤–∏–ª–∞ –≤—ã–∏–≥—Ä—ã—à–∞:
        - –¢—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞: –≤—ã–∏–≥—Ä—ã—à = —Å—Ç–∞–≤–∫–∞ * 5
        - –î–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞: –≤—ã–∏–≥—Ä—ã—à = —Å—Ç–∞–≤–∫–∞ * 2
        - –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: –ø—Ä–æ–∏–≥—Ä—ã—à —Å—Ç–∞–≤–∫–∏
    """
    query = update.callback_query
    await query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–∞ "slots_bet:XX"
    try:
        _, bet_str = query.data.split(":")
        bet = int(bet_str)
    except ValueError:
        logging.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–≤–∫–∏.")
        return

    user_id = query.from_user.id
    balance_now = get_balance(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –º–æ–Ω–µ—Ç –¥–ª—è —Å—Ç–∞–≤–∫–∏
    if balance_now < bet:
        await query.edit_message_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–≤–∫–∏!")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞–≤–∫—É
    context.user_data['slots_bet'] = bet

    # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
    update_balance(user_id, -bet)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã (3 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞)
    reel = [random.choice(SLOT_SYMBOLS) for _ in range(3)]
    result_text = " | ".join(reel)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à:
    if reel[0] == reel[1] == reel[2]:
        # –î–∂–µ–∫–ø–æ—Ç - —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞
        win = bet * 5
        update_balance(user_id, win)
        result_message = f"üé∞ {result_text} üé∞\n\n–î–∂–µ–∫–ø–æ—Ç! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win} –º–æ–Ω–µ—Ç!"
    elif reel[0] == reel[1] or reel[1] == reel[2] or reel[0] == reel[2]:
        # –î–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ - –ª—é–±–∞—è –ø–∞—Ä–∞ —Å–∏–º–≤–æ–ª–æ–≤
        win = bet * 2
        update_balance(user_id, win)
        result_message = f"üé∞ {result_text} üé∞\n\n–î–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win} –º–æ–Ω–µ—Ç!"
    else:
        # –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π - –ø—Ä–æ–∏–≥—Ä—ã—à
        result_message = f"üé∞ {result_text} üé∞\n\n–ù–∏—á–µ–≥–æ –Ω–µ —Å–æ–≤–ø–∞–ª–æ. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {bet} –º–æ–Ω–µ—Ç."

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –±–∞–ª–∞–Ω—Å–µ
    new_balance = get_balance(user_id)
    result_message += f"\n\nüí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: {new_balance} –º–æ–Ω–µ—Ç."

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏: –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–≥—Ä—É –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ
    keyboard = [
        [InlineKeyboardButton("üîÑ –°—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑", callback_data=f"slots_bet:{bet}")],
        [InlineKeyboardButton("üè† –í –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ", callback_data="casino:menu")]
    ]
    markup = InlineKeyboardMarkup(keyboard)
    
    try:
        await query.edit_message_text(result_message, reply_markup=markup)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤: {e}")
