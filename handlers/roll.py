# handlers/roll.py
"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /roll - –±—Ä–æ—Å–æ–∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É–±–∏–∫–∞.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫—É–±–∏–∫–∏ —Å –ª—é–±—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥—Ä–∞–Ω–µ–π –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
"""
import random
import time
import asyncio

from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaAnimation,
    InputMediaPhoto
)
from telegram.ext import ContextTypes
from utils import check_chat_and_execute
from config import DICE_GIF_ID, COOLDOWN
from state import last_roll_time

async def roll_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /roll - –±—Ä–æ—Å–æ–∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É–±–∏–∫–∞.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä "/roll 20".
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã
    """
    async def _roll_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        now = time.time()
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –º–µ–∂–¥—É –±—Ä–æ—Å–∫–∞–º–∏
        if user_id in last_roll_time:
            diff = now - last_roll_time[user_id]
            if diff < COOLDOWN:
                await context.bot.send_message(
                    chat_id=update.effective_chat.id,
                    text=f"–°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä—ã–π –±—Ä–æ—Å–æ–∫! –ü–æ–¥–æ–∂–¥–∏—Ç–µ {COOLDOWN - diff:.1f} —Å–µ–∫—É–Ω–¥."
                )
                return
        last_roll_time[user_id] = now

        args = context.args
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –Ω–∞ –∫—É–±–∏–∫–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 6)
            max_number = int(args[0]) if args else 6
            if max_number < 1:
                await context.bot.send_message(
                    chat_id=update.effective_chat.id,
                    text="–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!"
                )
                return
        except ValueError:
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /roll 20"
            )
            return

        if not DICE_GIF_ID:
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="–£ –º–µ–Ω—è –ø–æ–∫–∞ –Ω–µ—Ç file_id –¥–ª—è GIF! –°–Ω–∞—á–∞–ª–∞ —Å–¥–µ–ª–∞–π—Ç–µ /getfileid"
            )
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞
        msg = await context.bot.send_animation(
            chat_id=update.effective_chat.id,
            animation=DICE_GIF_ID,
            caption="–ö—É–±–∏–∫ –∫–∞—Ç–∏—Ç—Å—è... üé≤"
        )

        # –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏ –±—Ä–æ—Å–∫–µ
        await asyncio.sleep(1)

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        result = random.randint(1, max_number)
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–±—Ä–æ—Å–∞
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "–ü–µ—Ä–µ–±—Ä–æ—Å–∏—Ç—å (0)",
                callback_data=f"roll|{max_number}|0"
            )]
        ])

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –±—Ä–æ—Å–∫–∞
        with open("pictures/dice_result.png", "rb") as image_file:
            new_caption = (
                f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result} (–∏–∑ {max_number})\n"
                f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–±—Ä–æ—Å–æ–≤: 0"
            )
            media = InputMediaPhoto(image_file, caption=new_caption)
            await context.bot.edit_message_media(
                chat_id=msg.chat_id,
                message_id=msg.message_id,
                media=media,
                reply_markup=keyboard
            )
    await check_chat_and_execute(update, context, _roll_command)

async def roll_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–±—Ä–æ—Å–∞ –∫—É–±–∏–∫–∞.
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Å–ª—É—á–∞–π–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ –ø–µ—Ä–µ–±—Ä–æ—Å–æ–≤.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram (—Å–æ–¥–µ—Ä–∂–∏—Ç callback_query)
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    """
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    now = time.time()
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –º–µ–∂–¥—É –ø–µ—Ä–µ–±—Ä–æ—Å–∞–º–∏
    if user_id in last_roll_time:
        diff = now - last_roll_time[user_id]
        if diff < COOLDOWN:
            await query.answer(
                text=f"–°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ {COOLDOWN - diff:.1f} —Å–µ–∫—É–Ω–¥.",
                show_alert=True
            )
            return
    last_roll_time[user_id] = now

    # –†–∞–∑–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ callback_query
    data = query.data
    prefix, max_num_str, reroll_count_str = data.split("|")
    max_number = int(max_num_str)
    reroll_count = int(reroll_count_str)
    new_reroll_count = reroll_count + 1

    if not DICE_GIF_ID:
        await query.answer("–ù–µ—Ç file_id! –°–Ω–∞—á–∞–ª–∞ —Å–¥–µ–ª–∞–π—Ç–µ /getfileid.")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–µ–π –±—Ä–æ—Å–∫–∞
    media_animation = InputMediaAnimation(
        media=DICE_GIF_ID,
        caption="–ö—É–±–∏–∫ –∫–∞—Ç–∏—Ç—Å—è... üé≤"
    )
    await query.edit_message_media(
        media=media_animation,
        reply_markup=None
    )

    # –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏ –±—Ä–æ—Å–∫–µ
    await asyncio.sleep(1)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    result = random.randint(1, max_number)
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –Ω–æ–≤—ã–º —Å—á–µ—Ç—á–∏–∫–æ–º –ø–µ—Ä–µ–±—Ä–æ—Å–æ–≤
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton(
            f"–ü–µ—Ä–µ–±—Ä–æ—Å–∏—Ç—å ({new_reroll_count})",
            callback_data=f"roll|{max_number}|{new_reroll_count}"
        )]
    ])

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    with open("pictures/dice_result.png", "rb") as image_file:
        new_text = (
            f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result} (–∏–∑ {max_number})\n"
            f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–±—Ä–æ—Å–æ–≤: {new_reroll_count}"
        )
        media_photo = InputMediaPhoto(image_file, caption=new_text)
        await query.edit_message_media(
            media=media_photo,
            reply_markup=keyboard
        )
