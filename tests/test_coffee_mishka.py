import pytest
import time
from unittest.mock import patch, MagicMock, mock_open, AsyncMock

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
try:
    from handlers.coffee_mishka import (
        coffee_command,
        mishka_command,
        durka_command
    )
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å, —á—Ç–æ–±—ã –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ coffee_invocations
    import handlers.coffee_mishka
except ImportError as e:
    pytest.skip(f"–ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ coffee_mishka: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å handlers.coffee_mishka –∏–ª–∏ –µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ({e}).", allow_module_level=True)

# --- –¢–µ—Å—Ç—ã –¥–ª—è coffee_command ---

@pytest.mark.asyncio
@patch('handlers.coffee_mishka.check_chat_and_execute')
@patch('builtins.open', new_callable=mock_open)
@patch('handlers.coffee_mishka.time.time')
async def test_coffee_command_normal(mock_time, mock_file, mock_check_chat):
    """–¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã /coffee"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è
    mock_time.return_value = 100.0
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—ã–∑–æ–≤–æ–≤
    handlers.coffee_mishka.coffee_invocations = []
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏ –¥–ª—è update –∏ context
    update = MagicMock()
    context = MagicMock()
    context.bot = AsyncMock()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º AsyncMock –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await coffee_command(update, context)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è check_chat_and_execute
    mock_check_chat.assert_awaited_once()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é _coffee_command, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞
    # –≤ check_chat_and_execute
    _, _, internal_func = mock_check_chat.call_args[0]
    
    # –í—ã–∑—ã–≤–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await internal_func(update, context)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –±—ã–ª –æ—Ç–∫—Ä—ã—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    mock_file.assert_called_once_with("pictures/coffee.jpg", "rb")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
    context.bot.send_photo.assert_awaited_once()

@pytest.mark.asyncio
@patch('builtins.open', new_callable=mock_open)
@patch('handlers.coffee_mishka.time.time')
async def test_coffee_command_easter_egg(mock_time, mock_file):
    """–¢–µ—Å—Ç –ø–∞—Å—Ö–∞–ª–∫–∏ –ø—Ä–∏ —á–∞—Å—Ç–æ–º –≤—ã–∑–æ–≤–µ –∫–æ–º–∞–Ω–¥—ã /coffee"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è
    mock_time.return_value = 100.0
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —á–∞—Å—Ç—ã–π –≤—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã, –¥–æ–±–∞–≤–ª—è—è –∑–∞–ø–∏—Å–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
    # –í–∞–∂–Ω–æ - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã –Ω–µ –≤–ª–∏—è—Ç—å –Ω–∞ –¥—Ä—É–≥–∏–µ —Ç–µ—Å—Ç—ã
    handlers.coffee_mishka.coffee_invocations = [99.0, 99.5]  # –î–≤–∞ –≤—ã–∑–æ–≤–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏ –¥–ª—è update –∏ context
    update = MagicMock()
    update.effective_chat = MagicMock()
    update.effective_chat.id = 123
    context = MagicMock()
    context.bot = AsyncMock()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º AsyncMock –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—é –ø–∞—Å—Ö–∞–ª–∫–∏
    await coffee_command(update, context)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç —Ñ–∞–π–ª —Å "–ø–∞—Å—Ö–∞–ª—å–Ω–æ–π" –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    mock_file.assert_called_once_with("pictures/alcgaimer.jpg", "rb")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    context.bot.send_photo.assert_awaited_once_with(
        chat_id=123,
        photo=mock_file.return_value.__enter__.return_value
    )

@pytest.mark.asyncio
@patch('handlers.coffee_mishka.check_chat_and_execute')
@patch('handlers.coffee_mishka.time.time')
async def test_coffee_command_time_filter(mock_time, mock_check_chat):
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π –æ –≤—ã–∑–æ–≤–µ –∫–æ–º–∞–Ω–¥—ã /coffee"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    mock_time.return_value = 100.0
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –æ–¥–Ω–∏–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–º –≤—ã–∑–æ–≤–æ–º –∏ –æ–¥–Ω–∏–º –Ω–µ–¥–∞–≤–Ω–∏–º
    # –í–∞–∂–Ω–æ: —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    handlers.coffee_mishka.coffee_invocations = [85.0, 99.0]  # –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ –±–æ–ª–µ–µ 10 —Å–µ–∫ –Ω–∞–∑–∞–¥, –≤—Ç–æ—Ä–æ–π - –Ω–µ–¥–∞–≤–Ω–æ
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏ –¥–ª—è update –∏ context
    update = MagicMock()
    update.effective_chat = MagicMock()
    update.effective_chat.id = 123
    context = MagicMock()
    context.bot = AsyncMock()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º AsyncMock –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    
    # –ü–∞—Ç—á–∏–º –≤—ã–∑–æ–≤ check_chat_and_execute, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–ª None
    # –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –≤—ã–∑–æ–≤ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
    mock_check_chat.return_value = None
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await coffee_command(update, context)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã–π –≤—ã–∑–æ–≤ –±—ã–ª –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω
    assert 85.0 not in handlers.coffee_mishka.coffee_invocations  # —Å—Ç–∞—Ä—ã–π –≤—ã–∑–æ–≤ –±—ã–ª –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω

# --- –¢–µ—Å—Ç—ã –¥–ª—è mishka_command ---

@pytest.mark.asyncio
@patch('handlers.coffee_mishka.check_chat_and_execute')
async def test_mishka_command(mock_check_chat):
    """–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /mishka"""
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏ –¥–ª—è update –∏ context
    update = MagicMock()
    context = MagicMock()
    context.bot = AsyncMock()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º AsyncMock –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await mishka_command(update, context)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è check_chat_and_execute
    mock_check_chat.assert_awaited_once()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é _mishka_command
    _, _, internal_func = mock_check_chat.call_args[0]
    
    # –í—ã–∑—ã–≤–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    with patch('builtins.open', mock_open()) as mock_file:
        update.effective_chat.id = 456
        await internal_func(update, context)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –±—ã–ª –æ—Ç–∫—Ä—ã—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        mock_file.assert_called_once_with("pictures/mishka.jpg", "rb")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        context.bot.send_photo.assert_awaited_once_with(
            chat_id=456,
            photo=mock_file.return_value.__enter__.return_value,
            caption="–≠—Ç–æ —è! üêª"
        )

# --- –¢–µ—Å—Ç—ã –¥–ª—è durka_command ---

@pytest.mark.asyncio
@patch('handlers.coffee_mishka.check_chat_and_execute')
async def test_durka_command(mock_check_chat):
    """–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /durka"""
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏ –¥–ª—è update –∏ context
    update = MagicMock()
    context = MagicMock()
    context.bot = AsyncMock()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º AsyncMock –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await durka_command(update, context)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è check_chat_and_execute
    mock_check_chat.assert_awaited_once()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é _durka_command
    _, _, internal_func = mock_check_chat.call_args[0]
    
    # –í—ã–∑—ã–≤–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    with patch('builtins.open', mock_open()) as mock_file:
        update.effective_chat.id = 789
        await internal_func(update, context)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –±—ã–ª –æ—Ç–∫—Ä—ã—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        mock_file.assert_called_once_with("pictures/durka.jpg", "rb")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        context.bot.send_photo.assert_awaited_once_with(
            chat_id=789,
            photo=mock_file.return_value.__enter__.return_value
        ) 