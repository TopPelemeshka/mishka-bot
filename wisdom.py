# wisdom.py

import os
import datetime
import json
import random
from telegram import Update
from telegram.ext import ContextTypes
from config import POST_CHAT_ID, MATERIALS_DIR
import state  # –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è

WISDOM_FILE = os.path.join(MATERIALS_DIR, "wisdom.json")

def random_time_in_range(start: datetime.time, end: datetime.time) -> datetime.time:
    start_seconds = start.hour * 3600 + start.minute * 60 + start.second
    end_seconds = end.hour * 3600 + end.minute * 60 + end.second
    rand_sec = random.randint(start_seconds, end_seconds)
    hh = rand_sec // 3600
    mm = (rand_sec % 3600) // 60
    ss = rand_sec % 60
    return datetime.time(hour=hh, minute=mm, second=ss)

def load_wisdoms() -> list[str]:
    """–°—á–∏—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –º—É–¥—Ä–æ—Å—Ç–µ–π –∏–∑ —Ñ–∞–π–ª–∞ JSON (–º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫)."""
    if not os.path.exists(WISDOM_FILE):
        return []
    try:
        with open(WISDOM_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
            if isinstance(data, list):
                # —Ç—É—Ç –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
                return data
    except:
        pass
    return []

def save_wisdoms(wisdoms: list[str]):
    """–ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º wisdom.json."""
    with open(WISDOM_FILE, "w", encoding="utf-8") as f:
        json.dump(wisdoms, f, ensure_ascii=False, indent=4)

def get_random_wisdom() -> str | None:
    """
    –ë–µ—Ä—ë–º —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–æ–∫—É-–º—É–¥—Ä–æ—Å—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞, —É–¥–∞–ª—è–µ–º –µ—ë –∏–∑ —Ñ–∞–π–ª–∞.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None, –µ—Å–ª–∏ –º—É–¥—Ä–æ—Å—Ç–µ–π –Ω–µ—Ç.
    """
    ws = load_wisdoms()
    if not ws:
        return None
    w = random.choice(ws)
    ws.remove(w)
    save_wisdoms(ws)
    return w


async def wisdom_post_callback(context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—É–±–ª–∏–∫–∞—Ü–∏—è ¬´–ú—É–¥—Ä–æ—Å—Ç–∏ –¥–Ω—è¬ª ‚Äî 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏.
    """
    # –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–∞—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º state:
    # if not state.some_wisdom_enabled:
    #    return

    if not state.wisdom_enabled:
        return

    text = get_random_wisdom()
    if not text:
        await context.bot.send_message(
            chat_id=POST_CHAT_ID,
            text="–ú—É–¥—Ä–æ—Å—Ç–∏ –¥–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üò¢"
        )
        return

    await context.bot.send_message(
        chat_id=POST_CHAT_ID,
        text=f"ü¶â –ú—É–¥—Ä–æ—Å—Ç—å –¥–Ω—è:\n\n{text}"
    )

async def start_wisdom_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    state.wisdom_enabled = True
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ —Ñ–ª–∞–≥–∞–º–∏
    state.save_state(state.autopost_enabled, state.quiz_enabled, state.wisdom_enabled)
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ú—É–¥—Ä–æ—Å—Ç—å –¥–Ω—è –≤–∫–ª—é—á–µ–Ω–∞!"
    )

async def stop_wisdom_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    state.wisdom_enabled = False
    state.save_state(state.autopost_enabled, state.quiz_enabled, state.wisdom_enabled)
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ú—É–¥—Ä–æ—Å—Ç—å –¥–Ω—è –æ—Ç–∫–ª—é—á–µ–Ω–∞!"
    )